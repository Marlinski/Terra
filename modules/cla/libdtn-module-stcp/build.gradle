plugins {
    id("java-library")
    id "com.github.harbby.gradle.serviceloader" version "1.1.5"
    id("com.github.dcendents.android-maven")
}

group='com.github.RightMesh.Terra'

task ApiDoc(type: Javadoc) {
    source = sourceSets.main.allJava
}

jar {
    // META-INF/services to load module with ServiceLoader
    serviceLoader {
        serviceInterface 'io.left.rightmesh.libdtn.core.spi.cla.ConvergenceLayerSPI'
        serviceInterface 'io.left.rightmesh.libdtn.core.spi.cla.CLAChannelSPI'
        serviceInterface 'io.left.rightmesh.core.module.cla.stcp.STCP'
        serviceInterface 'io.left.rightmesh.core.module.cla.stcp.STCP$Channel'
    }

    // fat jar dependency, exclude those already in libdtn-core
    from {
        configurations.compile
                .filter({! it.name.matches("rxjava.*")})
                .filter({! it.name.matches("librxbus.*")})
                .filter({! it.name.matches("reactive-streams.*")})
                .filter({! it.name.matches("libcbor.*")})
                .filter({! it.name.matches("libdtn-core-api.*")})
                .filter({! it.name.matches("libdtn-common.*")})
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    systemProperty 'path', '/tmp'
    useJUnit()
    maxHeapSize = '1G'

    filter {
        //include all integration tests
        includeTestsMatching "*Test"
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // librxtcp for tcp socket
    compile 'com.github.RightMesh:librxtcp:65e2cb0ab8'

    // libdtn-common for data
    implementation project(path: ':libdtn-common')

    // libdtn-core-api for module
    implementation project(path: ':libdtn-core-api')

    // libcbor for encoding/parsing
    implementation 'com.github.RightMesh:libcbor:6e5ca8868f'

    // jUnit
    testImplementation 'junit:junit:4.12'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
