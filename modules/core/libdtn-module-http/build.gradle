plugins {
    id "java-library"
    id "org.jetbrains.kotlin.jvm"
    id "com.github.harbby.gradle.serviceloader" version "1.1.5"
}

task ApiDoc(type: Javadoc) {
    source = sourceSets.main.allJava
}

jar {
    // META-INF/services to load module with ServiceLoader
    serviceLoader {
        serviceInterface 'io.disruptedsystems.libdtn.core.spi.CoreModuleSpi'
        serviceInterface 'io.disruptedsystems.libdtn.module.core.http.ModuleHTTPDaemon'
    }

    // fat jar dependency
    from {
        configurations.compile
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // interface spi
    implementation project(path: ':libdtn-core-api')

    compile("io.ktor:ktor-server-netty:$ktor_version")
    compile("io.ktor:ktor-websockets:$ktor_version")

    // log
    compile "org.slf4j:slf4j-simple:1.7.30"

    // kotlin (use compile keyword instead of implementation to include it in the jar)
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
